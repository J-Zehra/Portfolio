"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-parallax-tilt";
exports.ids = ["vendor-chunks/react-parallax-tilt"];
exports.modules = {

/***/ "(ssr)/./node_modules/react-parallax-tilt/dist/modern/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/react-parallax-tilt/dist/modern/index.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ o)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n\nfunction i(t, e, i, n) {\n    return new (i || (i = Promise))(function(s, r) {\n        function l(t) {\n            try {\n                o(n.next(t));\n            } catch (t) {\n                r(t);\n            }\n        }\n        function a(t) {\n            try {\n                o(n.throw(t));\n            } catch (t) {\n                r(t);\n            }\n        }\n        function o(t) {\n            var e;\n            t.done ? s(t.value) : (e = t.value, e instanceof i ? e : new i(function(t) {\n                t(e);\n            })).then(l, a);\n        }\n        o((n = n.apply(t, e || [])).next());\n    });\n}\n\"function\" == typeof SuppressedError && SuppressedError;\nconst n = (t, e, i, n)=>{\n    t.style.transition = `${e} ${i}ms ${n}`;\n}, s = (t, e, i)=>Math.min(Math.max(t, e), i);\nclass r {\n    constructor(t, e){\n        this.glareAngle = 0, this.glareOpacity = 0, this.calculateGlareSize = (t)=>{\n            const { width: e, height: i } = t, n = Math.sqrt(Math.pow(e, 2) + Math.pow(i, 2));\n            return {\n                width: n,\n                height: n\n            };\n        }, this.setSize = (t)=>{\n            const e = this.calculateGlareSize(t);\n            this.glareEl.style.width = `${e.width}px`, this.glareEl.style.height = `${e.height}px`;\n        }, this.update = (t, e, i, n)=>{\n            this.updateAngle(t, e.glareReverse), this.updateOpacity(t, e, i, n);\n        }, this.updateAngle = (t, e)=>{\n            const { xPercentage: i, yPercentage: n } = t, s = 180 / Math.PI, r = i ? Math.atan2(n, -i) * s : 0;\n            this.glareAngle = r - (e ? 180 : 0);\n        }, this.updateOpacity = (t, e, i, n)=>{\n            const { xPercentage: r, yPercentage: l } = t, { glarePosition: a, glareReverse: o, glareMaxOpacity: h } = e, p = i ? -1 : 1, c = n ? -1 : 1, g = o ? -1 : 1;\n            let d = 0;\n            switch(a){\n                case \"top\":\n                    d = -r * p * g;\n                    break;\n                case \"right\":\n                    d = l * c * g;\n                    break;\n                case \"bottom\":\n                case void 0:\n                    d = r * p * g;\n                    break;\n                case \"left\":\n                    d = -l * c * g;\n                    break;\n                case \"all\":\n                    d = Math.hypot(r, l);\n            }\n            const u = s(d, 0, 100);\n            this.glareOpacity = u * h / 100;\n        }, this.render = (t)=>{\n            const { glareColor: e } = t;\n            this.glareEl.style.transform = `rotate(${this.glareAngle}deg) translate(-50%, -50%)`, this.glareEl.style.opacity = this.glareOpacity.toString(), this.glareEl.style.background = `linear-gradient(0deg, rgba(255,255,255,0) 0%, ${e} 100%)`;\n        }, this.glareWrapperEl = document.createElement(\"div\"), this.glareEl = document.createElement(\"div\"), this.glareWrapperEl.appendChild(this.glareEl), this.glareWrapperEl.className = \"glare-wrapper\", this.glareEl.className = \"glare\";\n        const i = {\n            position: \"absolute\",\n            top: \"0\",\n            left: \"0\",\n            width: \"100%\",\n            height: \"100%\",\n            overflow: \"hidden\",\n            borderRadius: e,\n            WebkitMaskImage: \"-webkit-radial-gradient(white, black)\",\n            pointerEvents: \"none\"\n        }, n = this.calculateGlareSize(t), r = {\n            position: \"absolute\",\n            top: \"50%\",\n            left: \"50%\",\n            transformOrigin: \"0% 0%\",\n            pointerEvents: \"none\",\n            width: `${n.width}px`,\n            height: `${n.height}px`\n        };\n        Object.assign(this.glareWrapperEl.style, i), Object.assign(this.glareEl.style, r);\n    }\n}\nclass l {\n    constructor(){\n        this.glareAngle = 0, this.glareOpacity = 0, this.tiltAngleX = 0, this.tiltAngleY = 0, this.tiltAngleXPercentage = 0, this.tiltAngleYPercentage = 0, this.update = (t, e)=>{\n            this.updateTilt(t, e), this.updateTiltManualInput(t, e), this.updateTiltReverse(e), this.updateTiltLimits(e);\n        }, this.updateTilt = (t, e)=>{\n            const { xPercentage: i, yPercentage: n } = t, { tiltMaxAngleX: s, tiltMaxAngleY: r } = e;\n            this.tiltAngleX = i * s / 100, this.tiltAngleY = n * r / 100 * -1;\n        }, this.updateTiltManualInput = (t, e)=>{\n            const { tiltAngleXManual: i, tiltAngleYManual: n, tiltMaxAngleX: s, tiltMaxAngleY: r } = e;\n            (null !== i || null !== n) && (this.tiltAngleX = null !== i ? i : 0, this.tiltAngleY = null !== n ? n : 0, t.xPercentage = 100 * this.tiltAngleX / s, t.yPercentage = 100 * this.tiltAngleY / r);\n        }, this.updateTiltReverse = (t)=>{\n            const e = t.tiltReverse ? -1 : 1;\n            this.tiltAngleX = e * this.tiltAngleX, this.tiltAngleY = e * this.tiltAngleY;\n        }, this.updateTiltLimits = (t)=>{\n            const { tiltAxis: e } = t;\n            this.tiltAngleX = s(this.tiltAngleX, -90, 90), this.tiltAngleY = s(this.tiltAngleY, -90, 90);\n            e && (this.tiltAngleX = \"x\" === e ? this.tiltAngleX : 0, this.tiltAngleY = \"y\" === e ? this.tiltAngleY : 0);\n        }, this.updateTiltAnglesPercentage = (t)=>{\n            const { tiltMaxAngleX: e, tiltMaxAngleY: i } = t;\n            this.tiltAngleXPercentage = this.tiltAngleX / e * 100, this.tiltAngleYPercentage = this.tiltAngleY / i * 100;\n        }, this.render = (t)=>{\n            t.style.transform += `rotateX(${this.tiltAngleX}deg) rotateY(${this.tiltAngleY}deg) `;\n        };\n    }\n}\nconst a = Object.assign(Object.assign({\n    scale: 1,\n    perspective: 1e3,\n    flipVertically: !1,\n    flipHorizontally: !1,\n    reset: !0,\n    transitionEasing: \"cubic-bezier(.03,.98,.52,.99)\",\n    transitionSpeed: 400,\n    trackOnWindow: !1,\n    gyroscope: !1\n}, {\n    tiltEnable: !0,\n    tiltReverse: !1,\n    tiltAngleXInitial: 0,\n    tiltAngleYInitial: 0,\n    tiltMaxAngleX: 20,\n    tiltMaxAngleY: 20,\n    tiltAxis: void 0,\n    tiltAngleXManual: null,\n    tiltAngleYManual: null\n}), {\n    glareEnable: !1,\n    glareMaxOpacity: .7,\n    glareColor: \"#ffffff\",\n    glarePosition: \"bottom\",\n    glareReverse: !1,\n    glareBorderRadius: \"0\"\n});\nclass o extends react__WEBPACK_IMPORTED_MODULE_0__.PureComponent {\n    constructor(){\n        super(...arguments), this.wrapperEl = {\n            node: null,\n            size: {\n                width: 0,\n                height: 0,\n                left: 0,\n                top: 0\n            },\n            clientPosition: {\n                x: null,\n                y: null,\n                xPercentage: 0,\n                yPercentage: 0\n            },\n            updateAnimationId: null,\n            scale: 1\n        }, this.tilt = null, this.glare = null, this.addDeviceOrientationEventListener = ()=>i(this, void 0, void 0, function*() {\n                if (!window.DeviceOrientationEvent) return;\n                const t = DeviceOrientationEvent.requestPermission;\n                if (\"function\" == typeof t) {\n                    \"granted\" === (yield t()) && window.addEventListener(\"deviceorientation\", this.onMove);\n                } else window.addEventListener(\"deviceorientation\", this.onMove);\n            }), this.setSize = ()=>{\n            this.setWrapperElSize(), this.glare && this.glare.setSize(this.wrapperEl.size);\n        }, this.mainLoop = (t)=>{\n            null !== this.wrapperEl.updateAnimationId && cancelAnimationFrame(this.wrapperEl.updateAnimationId), this.processInput(t), this.update(t.type), this.wrapperEl.updateAnimationId = requestAnimationFrame(this.renderFrame);\n        }, this.onEnter = (t)=>{\n            const { onEnter: e } = this.props;\n            this.setSize(), this.wrapperEl.node.style.willChange = \"transform\", this.setTransitions(), e && e(t.type);\n        }, this.onMove = (t)=>{\n            this.mainLoop(t), this.emitOnMove(t);\n        }, this.onLeave = (t)=>{\n            const { onLeave: e } = this.props;\n            if (this.setTransitions(), e && e(t.type), this.props.reset) {\n                const t = new CustomEvent(\"autoreset\");\n                this.onMove(t);\n            }\n        }, this.processInput = (t)=>{\n            const { scale: e } = this.props;\n            switch(t.type){\n                case \"mousemove\":\n                    this.wrapperEl.clientPosition.x = t.pageX, this.wrapperEl.clientPosition.y = t.pageY, this.wrapperEl.scale = e;\n                    break;\n                case \"touchmove\":\n                    this.wrapperEl.clientPosition.x = t.touches[0].pageX, this.wrapperEl.clientPosition.y = t.touches[0].pageY, this.wrapperEl.scale = e;\n                    break;\n                case \"deviceorientation\":\n                    this.processInputDeviceOrientation(t), this.wrapperEl.scale = e;\n                    break;\n                case \"autoreset\":\n                    const { tiltAngleXInitial: i, tiltAngleYInitial: n, tiltMaxAngleX: r, tiltMaxAngleY: l } = this.props, a = n / l * 100;\n                    this.wrapperEl.clientPosition.xPercentage = s(i / r * 100, -100, 100), this.wrapperEl.clientPosition.yPercentage = s(a, -100, 100), this.wrapperEl.scale = 1;\n            }\n        }, this.processInputDeviceOrientation = (t)=>{\n            if (!t.gamma || !t.beta || !this.props.gyroscope) return;\n            const { tiltMaxAngleX: e, tiltMaxAngleY: i } = this.props, n = t.gamma;\n            this.wrapperEl.clientPosition.xPercentage = t.beta / e * 100, this.wrapperEl.clientPosition.yPercentage = n / i * 100, this.wrapperEl.clientPosition.xPercentage = s(this.wrapperEl.clientPosition.xPercentage, -100, 100), this.wrapperEl.clientPosition.yPercentage = s(this.wrapperEl.clientPosition.yPercentage, -100, 100);\n        }, this.update = (t)=>{\n            const { tiltEnable: e, flipVertically: i, flipHorizontally: n } = this.props;\n            \"autoreset\" !== t && \"deviceorientation\" !== t && \"propChange\" !== t && this.updateClientInput(), e && this.tilt.update(this.wrapperEl.clientPosition, this.props), this.updateFlip(), this.tilt.updateTiltAnglesPercentage(this.props), this.glare && this.glare.update(this.wrapperEl.clientPosition, this.props, i, n);\n        }, this.updateClientInput = ()=>{\n            const { trackOnWindow: t } = this.props;\n            let e, i;\n            if (t) {\n                const { x: t, y: n } = this.wrapperEl.clientPosition;\n                e = n / window.innerHeight * 200 - 100, i = t / window.innerWidth * 200 - 100;\n            } else {\n                const { size: { width: t, height: n, left: s, top: r }, clientPosition: { x: l, y: a } } = this.wrapperEl;\n                e = (a - r) / n * 200 - 100, i = (l - s) / t * 200 - 100;\n            }\n            this.wrapperEl.clientPosition.xPercentage = s(e, -100, 100), this.wrapperEl.clientPosition.yPercentage = s(i, -100, 100);\n        }, this.updateFlip = ()=>{\n            const { flipVertically: t, flipHorizontally: e } = this.props;\n            t && (this.tilt.tiltAngleX += 180, this.tilt.tiltAngleY *= -1), e && (this.tilt.tiltAngleY += 180);\n        }, this.renderFrame = ()=>{\n            this.resetWrapperElTransform(), this.renderPerspective(), this.tilt.render(this.wrapperEl.node), this.renderScale(), this.glare && this.glare.render(this.props);\n        };\n    }\n    componentDidMount() {\n        if (this.tilt = new l, this.initGlare(), this.addEventListeners(), \"undefined\" == typeof CustomEvent) return;\n        const t = new CustomEvent(\"autoreset\");\n        this.mainLoop(t);\n        const e = new CustomEvent(\"initial\");\n        this.emitOnMove(e);\n    }\n    componentWillUnmount() {\n        null !== this.wrapperEl.updateAnimationId && cancelAnimationFrame(this.wrapperEl.updateAnimationId), this.removeEventListeners();\n    }\n    componentDidUpdate() {\n        const t = new CustomEvent(\"propChange\");\n        this.mainLoop(t), this.emitOnMove(t);\n    }\n    addEventListeners() {\n        const { trackOnWindow: t, gyroscope: e } = this.props;\n        window.addEventListener(\"resize\", this.setSize), t && (window.addEventListener(\"mouseenter\", this.onEnter), window.addEventListener(\"mousemove\", this.onMove), window.addEventListener(\"mouseout\", this.onLeave), window.addEventListener(\"touchstart\", this.onEnter), window.addEventListener(\"touchmove\", this.onMove), window.addEventListener(\"touchend\", this.onLeave)), e && this.addDeviceOrientationEventListener();\n    }\n    removeEventListeners() {\n        const { trackOnWindow: t, gyroscope: e } = this.props;\n        window.removeEventListener(\"resize\", this.setSize), t && (window.removeEventListener(\"mouseenter\", this.onEnter), window.removeEventListener(\"mousemove\", this.onMove), window.removeEventListener(\"mouseout\", this.onLeave), window.removeEventListener(\"touchstart\", this.onEnter), window.removeEventListener(\"touchmove\", this.onMove), window.removeEventListener(\"touchend\", this.onLeave)), e && window.DeviceOrientationEvent && window.removeEventListener(\"deviceorientation\", this.onMove);\n    }\n    setWrapperElSize() {\n        const t = this.wrapperEl.node.getBoundingClientRect();\n        this.wrapperEl.size.width = this.wrapperEl.node.offsetWidth, this.wrapperEl.size.height = this.wrapperEl.node.offsetHeight, this.wrapperEl.size.left = t.left + window.scrollX, this.wrapperEl.size.top = t.top + window.scrollY;\n    }\n    initGlare() {\n        const { glareEnable: t, glareBorderRadius: e } = this.props;\n        t && (this.glare = new r(this.wrapperEl.size, e), this.wrapperEl.node.appendChild(this.glare.glareWrapperEl));\n    }\n    emitOnMove(t) {\n        const { onMove: e } = this.props;\n        if (!e) return;\n        let i = 0, n = 0;\n        this.glare && (i = this.glare.glareAngle, n = this.glare.glareOpacity), e({\n            tiltAngleX: this.tilt.tiltAngleX,\n            tiltAngleY: this.tilt.tiltAngleY,\n            tiltAngleXPercentage: this.tilt.tiltAngleXPercentage,\n            tiltAngleYPercentage: this.tilt.tiltAngleYPercentage,\n            glareAngle: i,\n            glareOpacity: n,\n            eventType: t.type\n        });\n    }\n    resetWrapperElTransform() {\n        this.wrapperEl.node.style.transform = \"\";\n    }\n    renderPerspective() {\n        const { perspective: t } = this.props;\n        this.wrapperEl.node.style.transform += `perspective(${t}px) `;\n    }\n    renderScale() {\n        const { scale: t } = this.wrapperEl;\n        this.wrapperEl.node.style.transform += `scale3d(${t},${t},${t})`;\n    }\n    setTransitions() {\n        const { transitionSpeed: t, transitionEasing: e } = this.props;\n        n(this.wrapperEl.node, \"all\", t, e), this.glare && n(this.glare.glareEl, \"opacity\", t, e);\n    }\n    render() {\n        const { children: e, className: i, style: n } = this.props;\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n            ref: (t)=>this.wrapperEl.node = t,\n            onMouseEnter: this.onEnter,\n            onMouseMove: this.onMove,\n            onMouseLeave: this.onLeave,\n            onTouchStart: this.onEnter,\n            onTouchMove: this.onMove,\n            onTouchEnd: this.onLeave,\n            className: i,\n            style: n\n        }, e);\n    }\n}\no.defaultProps = a;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-parallax-tilt/dist/modern/index.js\n");

/***/ })

};
;