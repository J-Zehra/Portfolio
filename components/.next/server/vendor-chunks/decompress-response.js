"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/decompress-response";
exports.ids = ["vendor-chunks/decompress-response"];
exports.modules = {

/***/ "(ssr)/./node_modules/decompress-response/index.js":
/*!***************************************************!*\
  !*** ./node_modules/decompress-response/index.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst { Transform, PassThrough } = __webpack_require__(/*! stream */ \"stream\");\nconst zlib = __webpack_require__(/*! zlib */ \"zlib\");\nconst mimicResponse = __webpack_require__(/*! mimic-response */ \"(ssr)/./node_modules/mimic-response/index.js\");\nmodule.exports = (response)=>{\n    const contentEncoding = (response.headers[\"content-encoding\"] || \"\").toLowerCase();\n    delete response.headers[\"content-encoding\"];\n    if (![\n        \"gzip\",\n        \"deflate\",\n        \"br\"\n    ].includes(contentEncoding)) {\n        return response;\n    }\n    // TODO: Remove this when targeting Node.js 12.\n    const isBrotli = contentEncoding === \"br\";\n    if (isBrotli && typeof zlib.createBrotliDecompress !== \"function\") {\n        response.destroy(new Error(\"Brotli is not supported on Node.js < 12\"));\n        return response;\n    }\n    let isEmpty = true;\n    const checker = new Transform({\n        transform (data, _encoding, callback) {\n            isEmpty = false;\n            callback(null, data);\n        },\n        flush (callback) {\n            callback();\n        }\n    });\n    const finalStream = new PassThrough({\n        autoDestroy: false,\n        destroy (error, callback) {\n            response.destroy();\n            callback(error);\n        }\n    });\n    const decompressStream = isBrotli ? zlib.createBrotliDecompress() : zlib.createUnzip();\n    decompressStream.once(\"error\", (error)=>{\n        if (isEmpty && !response.readable) {\n            finalStream.end();\n            return;\n        }\n        finalStream.destroy(error);\n    });\n    mimicResponse(response, finalStream);\n    response.pipe(checker).pipe(decompressStream).pipe(finalStream);\n    return finalStream;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvZGVjb21wcmVzcy1yZXNwb25zZS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBLE1BQU0sRUFBQ0EsU0FBUyxFQUFFQyxXQUFXLEVBQUMsR0FBR0MsbUJBQU9BLENBQUM7QUFDekMsTUFBTUMsT0FBT0QsbUJBQU9BLENBQUM7QUFDckIsTUFBTUUsZ0JBQWdCRixtQkFBT0EsQ0FBQztBQUU5QkcsT0FBT0MsT0FBTyxHQUFHQyxDQUFBQTtJQUNoQixNQUFNQyxrQkFBa0IsQ0FBQ0QsU0FBU0UsT0FBTyxDQUFDLG1CQUFtQixJQUFJLEVBQUMsRUFBR0MsV0FBVztJQUNoRixPQUFPSCxTQUFTRSxPQUFPLENBQUMsbUJBQW1CO0lBRTNDLElBQUksQ0FBQztRQUFDO1FBQVE7UUFBVztLQUFLLENBQUNFLFFBQVEsQ0FBQ0gsa0JBQWtCO1FBQ3pELE9BQU9EO0lBQ1I7SUFFQSwrQ0FBK0M7SUFDL0MsTUFBTUssV0FBV0osb0JBQW9CO0lBQ3JDLElBQUlJLFlBQVksT0FBT1QsS0FBS1Usc0JBQXNCLEtBQUssWUFBWTtRQUNsRU4sU0FBU08sT0FBTyxDQUFDLElBQUlDLE1BQU07UUFDM0IsT0FBT1I7SUFDUjtJQUVBLElBQUlTLFVBQVU7SUFFZCxNQUFNQyxVQUFVLElBQUlqQixVQUFVO1FBQzdCa0IsV0FBVUMsSUFBSSxFQUFFQyxTQUFTLEVBQUVDLFFBQVE7WUFDbENMLFVBQVU7WUFFVkssU0FBUyxNQUFNRjtRQUNoQjtRQUVBRyxPQUFNRCxRQUFRO1lBQ2JBO1FBQ0Q7SUFDRDtJQUVBLE1BQU1FLGNBQWMsSUFBSXRCLFlBQVk7UUFDbkN1QixhQUFhO1FBQ2JWLFNBQVFXLEtBQUssRUFBRUosUUFBUTtZQUN0QmQsU0FBU08sT0FBTztZQUVoQk8sU0FBU0k7UUFDVjtJQUNEO0lBRUEsTUFBTUMsbUJBQW1CZCxXQUFXVCxLQUFLVSxzQkFBc0IsS0FBS1YsS0FBS3dCLFdBQVc7SUFFcEZELGlCQUFpQkUsSUFBSSxDQUFDLFNBQVNILENBQUFBO1FBQzlCLElBQUlULFdBQVcsQ0FBQ1QsU0FBU3NCLFFBQVEsRUFBRTtZQUNsQ04sWUFBWU8sR0FBRztZQUNmO1FBQ0Q7UUFFQVAsWUFBWVQsT0FBTyxDQUFDVztJQUNyQjtJQUVBckIsY0FBY0csVUFBVWdCO0lBQ3hCaEIsU0FBU3dCLElBQUksQ0FBQ2QsU0FBU2MsSUFBSSxDQUFDTCxrQkFBa0JLLElBQUksQ0FBQ1I7SUFFbkQsT0FBT0E7QUFDUiIsInNvdXJjZXMiOlsid2VicGFjazovL3BvcnRmb2xpby8uL25vZGVfbW9kdWxlcy9kZWNvbXByZXNzLXJlc3BvbnNlL2luZGV4LmpzPzI0ODciXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuY29uc3Qge1RyYW5zZm9ybSwgUGFzc1Rocm91Z2h9ID0gcmVxdWlyZSgnc3RyZWFtJyk7XG5jb25zdCB6bGliID0gcmVxdWlyZSgnemxpYicpO1xuY29uc3QgbWltaWNSZXNwb25zZSA9IHJlcXVpcmUoJ21pbWljLXJlc3BvbnNlJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gcmVzcG9uc2UgPT4ge1xuXHRjb25zdCBjb250ZW50RW5jb2RpbmcgPSAocmVzcG9uc2UuaGVhZGVyc1snY29udGVudC1lbmNvZGluZyddIHx8ICcnKS50b0xvd2VyQ2FzZSgpO1xuXHRkZWxldGUgcmVzcG9uc2UuaGVhZGVyc1snY29udGVudC1lbmNvZGluZyddO1xuXG5cdGlmICghWydnemlwJywgJ2RlZmxhdGUnLCAnYnInXS5pbmNsdWRlcyhjb250ZW50RW5jb2RpbmcpKSB7XG5cdFx0cmV0dXJuIHJlc3BvbnNlO1xuXHR9XG5cblx0Ly8gVE9ETzogUmVtb3ZlIHRoaXMgd2hlbiB0YXJnZXRpbmcgTm9kZS5qcyAxMi5cblx0Y29uc3QgaXNCcm90bGkgPSBjb250ZW50RW5jb2RpbmcgPT09ICdicic7XG5cdGlmIChpc0Jyb3RsaSAmJiB0eXBlb2YgemxpYi5jcmVhdGVCcm90bGlEZWNvbXByZXNzICE9PSAnZnVuY3Rpb24nKSB7XG5cdFx0cmVzcG9uc2UuZGVzdHJveShuZXcgRXJyb3IoJ0Jyb3RsaSBpcyBub3Qgc3VwcG9ydGVkIG9uIE5vZGUuanMgPCAxMicpKTtcblx0XHRyZXR1cm4gcmVzcG9uc2U7XG5cdH1cblxuXHRsZXQgaXNFbXB0eSA9IHRydWU7XG5cblx0Y29uc3QgY2hlY2tlciA9IG5ldyBUcmFuc2Zvcm0oe1xuXHRcdHRyYW5zZm9ybShkYXRhLCBfZW5jb2RpbmcsIGNhbGxiYWNrKSB7XG5cdFx0XHRpc0VtcHR5ID0gZmFsc2U7XG5cblx0XHRcdGNhbGxiYWNrKG51bGwsIGRhdGEpO1xuXHRcdH0sXG5cblx0XHRmbHVzaChjYWxsYmFjaykge1xuXHRcdFx0Y2FsbGJhY2soKTtcblx0XHR9XG5cdH0pO1xuXG5cdGNvbnN0IGZpbmFsU3RyZWFtID0gbmV3IFBhc3NUaHJvdWdoKHtcblx0XHRhdXRvRGVzdHJveTogZmFsc2UsXG5cdFx0ZGVzdHJveShlcnJvciwgY2FsbGJhY2spIHtcblx0XHRcdHJlc3BvbnNlLmRlc3Ryb3koKTtcblxuXHRcdFx0Y2FsbGJhY2soZXJyb3IpO1xuXHRcdH1cblx0fSk7XG5cblx0Y29uc3QgZGVjb21wcmVzc1N0cmVhbSA9IGlzQnJvdGxpID8gemxpYi5jcmVhdGVCcm90bGlEZWNvbXByZXNzKCkgOiB6bGliLmNyZWF0ZVVuemlwKCk7XG5cblx0ZGVjb21wcmVzc1N0cmVhbS5vbmNlKCdlcnJvcicsIGVycm9yID0+IHtcblx0XHRpZiAoaXNFbXB0eSAmJiAhcmVzcG9uc2UucmVhZGFibGUpIHtcblx0XHRcdGZpbmFsU3RyZWFtLmVuZCgpO1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdGZpbmFsU3RyZWFtLmRlc3Ryb3koZXJyb3IpO1xuXHR9KTtcblxuXHRtaW1pY1Jlc3BvbnNlKHJlc3BvbnNlLCBmaW5hbFN0cmVhbSk7XG5cdHJlc3BvbnNlLnBpcGUoY2hlY2tlcikucGlwZShkZWNvbXByZXNzU3RyZWFtKS5waXBlKGZpbmFsU3RyZWFtKTtcblxuXHRyZXR1cm4gZmluYWxTdHJlYW07XG59O1xuIl0sIm5hbWVzIjpbIlRyYW5zZm9ybSIsIlBhc3NUaHJvdWdoIiwicmVxdWlyZSIsInpsaWIiLCJtaW1pY1Jlc3BvbnNlIiwibW9kdWxlIiwiZXhwb3J0cyIsInJlc3BvbnNlIiwiY29udGVudEVuY29kaW5nIiwiaGVhZGVycyIsInRvTG93ZXJDYXNlIiwiaW5jbHVkZXMiLCJpc0Jyb3RsaSIsImNyZWF0ZUJyb3RsaURlY29tcHJlc3MiLCJkZXN0cm95IiwiRXJyb3IiLCJpc0VtcHR5IiwiY2hlY2tlciIsInRyYW5zZm9ybSIsImRhdGEiLCJfZW5jb2RpbmciLCJjYWxsYmFjayIsImZsdXNoIiwiZmluYWxTdHJlYW0iLCJhdXRvRGVzdHJveSIsImVycm9yIiwiZGVjb21wcmVzc1N0cmVhbSIsImNyZWF0ZVVuemlwIiwib25jZSIsInJlYWRhYmxlIiwiZW5kIiwicGlwZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/decompress-response/index.js\n");

/***/ })

};
;